{
  "$schema": "http://json-schema.org/draft-07/schema",
  "definitions": {
    "text": {
      "description": "The text to find and jump forward to.",
      "type": [
        "string"
      ]
    },
    "restrictSearch": {
      "description": "Default is to jump anywhere in the document.  Options: document, line.",
      "type": "string",
      "enum": [
        "document",
        "line"
      ],
      "enumDescriptions": [
        "Jump anywhere in the document - but does not wrap.",
        "Jump only within the current line - does not wrap."
      ],
      "default": "document"
    },
    "cursorJump": {
      "type": "string",
      "enum": [
        "beforeCharacter",
        "afterCharacter"
      ],
      "markdownEnumDescriptions": [
        "On jump, cursor will be put before the matched character.",
        "On jump, cursor will be put after the matched character."
      ]
    },
    "cursorSelect": {
      "type": "string",
      "enum": [
        "beforeCharacter",
        "afterCharacter"
      ],
      "markdownEnumDescriptions": [
        "The selection will include the matched character.",
        "The selection will NOT include the matched character."
      ]
    },
    "where": {
      "type": "string",
      "description": "Jump to the start or end of the chosen symbol.",
      "default": "nextStart",
      "enum": [
        "previousStart",
        "previousEnd",
        "currentStart",
        "currentEnd",
        "nextStart",
        "nextEnd",
        "parentStart",
        "parentEnd",
        "childStart",
        "childEnd",
        "topScopeStart",
        "topScopeEnd"
      ],
      "markdownEnumDescriptions": [
        "Jump to the start/top of the previous symbol.",
        "Jump to the end/bottom of the previous symbol.",
        "Jump to the start/top of the current symbol.",
        "Jump to the end/bottom of the current symbol.",
        "Jump to the start/top of the next symbol.",
        "Jump to the end/bottom of the next symbol.",
        "Jump to the start/top of the parent symbol - the immediate parent of the current symbol.",
        "Jump to the end/bottom of the parent symbol - the immediate parent of the current symbol.",
        "Jump to the start/top of the parent symbol's first child symbol.",
        "Jump to the end/bottom of the parent symbol's first child symbol.",
        "Jump to the start/top of the symbol at the most outer scope - a parent at the highest level.",
        "Jump to the end/bottom of the symbol at the most outer scope - a parent at the highest level."
      ]
    },
    "select": {
      "description": "Select the entire symbol as indicated by the 'type' option.",
      "type": [
        "boolean"
      ],
      "default": false
    },
    "symbol": {
      "description": "The type of symbol to jump to (e.g., function, class and/or method.",
      "default": [
        "function",
        "class",
        "method"
      ],
      "oneOf": [
        {
          "type": "string",
          "enum": [
            "function",
            "class",
            "method"
          ],
          "markdownEnumDescriptions": [
            "Jump between functions.",
            "Jump between classes.",
            "Jump between methods."
          ]
        },
        {
          "type": "array",
          "items": {
            "type": "string",
            "anyOf": [
              {
                "const": "function"
              },
              {
                "const": "class"
              },
              {
                "const": "method"
              }
            ]
          },
          "minItems": 1,
          "uniqueItems": true
        }
      ]
    }
  },
  "type": "array",
  "items": {
    "type": "object",
    "required": [
      "command"
    ],
    "allOf": [
      {
        "if": {
          "properties": {
            "command": {
              "type": "string",
              "pattern": "^jump-and-select"
            }
          }
        },
        "then": {
          "properties": {
            "command": {
              "anyOf": [
                {
                  "const": "jump-and-select.jumpForward"
                },
                {
                  "const": "jump-and-select.jumpForwardSelect"
                },
                {
                  "const": "jump-and-select.jumpForwardMultiMode"
                },
                {
                  "const": "jump-and-select.jumpForwardSelectMultiMode"
                },
                {
                  "const": "jump-and-select.jumpBackward"
                },
                {
                  "const": "jump-and-select.jumpBackwardSelect"
                },
                {
                  "const": "jump-and-select.jumpBackwardMultiMode"
                },
                {
                  "const": "jump-and-select.jumpBackwardSelectMultiMode"
                },
                {
                  "const": "jump-and-select.bySymbol"
                }
              ]
            }
          }
        }
      },
      {
        "if": {
          "properties": {
            "command": {
              "anyOf": [
                {
                  "const": "jump-and-select.bySymbol"
                }
              ]
            }
          }
        },
        "then": {
          "properties": {
            "args": {
              // "required": ["symbol", "where"],
              "additionalProperties": false,
              "type": "object",
              "properties": {
                "symbol": {
                  "description": "Which kind symbol to jump to.",
                  "$ref": "#/definitions/symbol"
                },
                "where": {
                  "description": "Where to jump to.",
                  "$ref": "#/definitions/where"
                },
                "select": {
                  "$ref": "#/definitions/select"
                }
              }
            }
          }
        }
      },
      {
        "if": {
          "properties": {
            "command": {
              "anyOf": [
                {
                  "const": "jump-and-select.jumpForward"
                },
                {
                  "const": "jump-and-select.jumpForwardMultiMode"
                }
              ]
            }
          }
        },
        "then": {
          "properties": {
            "args": {
              "additionalProperties": false,
              "type": "object",
              "properties": {
                "text": {
                  "description": "The text to find and jump forward to.",
                  "$ref": "#/definitions/text"
                },
                "restrictSearch": {
                  "$ref": "#/definitions/restrictSearch"
                },
                "putCursorOnForwardJump": {
                  "description": "On a forward jump, put the cursor before or after the matched character.",
                  "$ref": "#/definitions/cursorJump",
                  "default": "beforeCharacter"
                }
              }
            }
          }
        }
      },
      {
        "if": {
          "properties": {
            "command": {
              "anyOf": [
                {
                  "const": "jump-and-select.jumpForwardSelect"
                },
                {
                  "const": "jump-and-select.jumpForwardSelectMultiMode"
                }
              ]
            }
          }
        },
        "then": {
          "properties": {
            "args": {
              "additionalProperties": false,
              "properties": {
                "text": {
                  "description": "The text to find and jump forward to.",
                  "$ref": "#/definitions/text"
                },
                "restrictSearch": {
                  "$ref": "#/definitions/restrictSearch"
                },
                "putCursorOnForwardSelect": {
                  "description": "On a forward select, extend the selection to before or after the matched character.",
                  "$ref": "#/definitions/cursorSelect",
                  "default": "afterCharacter"
                }
              }
            }
          }
        }
      },
      {
        "if": {
          "properties": {
            "command": {
              "anyOf": [
                {
                  "const": "jump-and-select.jumpBackward"
                },
                {
                  "const": "jump-and-select.jumpBackwardMultiMode"
                }
              ]
            }
          }
        },
        "then": {
          "properties": {
            "args": {
              "additionalProperties": false,
              "properties": {
                "text": {
                  "description": "The text to jump backward to",
                  "$ref": "#/definitions/text"
                },
                "restrictSearch": {
                  "$ref": "#/definitions/restrictSearch"
                },
                "putCursorOnBackwardJump": {
                  "description": "On a backward jump, put the cursor before or after the matched character.",
                  "$ref": "#/definitions/cursorJump",
                  "default": "beforeCharacter"
                }
              }
            }
          }
        }
      },
      {
        "if": {
          "properties": {
            "command": {
              "anyOf": [
                {
                  "const": "jump-and-select.jumpBackwardSelect"
                },
                {
                  "const": "jump-and-select.jumpBackwardSelectMultiMode"
                }
              ]
            }
          }
        },
        "then": {
          "properties": {
            "args": {
              "additionalProperties": false,
              "properties": {
                "text": {
                  "description": "The text to jump backward to.",
                  "$ref": "#/definitions/text"
                },
                "restrictSearch": {
                  "$ref": "#/definitions/restrictSearch"
                },
                "putCursorOnBackwardSelect": {
                  "description": "On a backward selection, extend the selection to before or after the matched character.",
                  "$ref": "#/definitions/cursorSelect",
                  "default": "beforeCharacter"
                }
              }
            }
          }
        }
      }
    ]
  }
}